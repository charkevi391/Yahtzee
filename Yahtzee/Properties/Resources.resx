<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="3rdMedal" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLgEsAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCACvAIcDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAoorG1vxJYaHCTNIGmI+SJeWY/Sk2lqxpNuyNgkKMkg
        Vz+peM9H03KtcrLIMjZGdx/SvPdY8U6hqu+S4uDZ2o+7HGcMR7muQn1y1tpP9GjDOOSzVxVMY72pq520
        8G3rM9OvPiRcMT9g01mUDJaVtv6Vl3XjjxBKVCNbW/mdMc7fzrzOTXb65dvKzh+o9Kh/4mc7fNIQF6c1
        h9YqS3lY6/qdNLY9Hi8YeJAdx1CJirY2lRg1oQ+PtfiDB7a2nx3ViD/WvKGh1DJIl6+9Hm6pbbXVy3qM
        0vb1I7Tv8h/VYPoe12nxMgUBdRsJoG7svzL+ldZpniDTNWTdaXcb8AkbuR+FfOUPiK4hIFwhC+pGc+1a
        ltqVldyK8Mj2s45EkbbauOMqL4ldGNTBR+zufRlFeVaL491DSikerA3dqTgXEY+YfUd69LsNQtdSt1nt
        ZkkRhnKnNdtKvCqrxZ59SlKm7SLVFFFbGYUUUUAFFFc74t8RLoWnfJh7mU7I0B5yf6VM5qEXKWxUYuTs
        it4r8WLpS/YrIrJqEg+VeoX3NeT6trBt7iS5uZfPu26ue3sKNU1I2SSySSGS8mJZ5CckZ7VysEU2pXO+
        TOM8D1ry61WdXyievh8OoK61YS3N1qbnaWCk8k1dttIwN0oyetdDp+g+TD5kgAyMhahkDJJtrkqSnBWg
        zthaT8yBLaPA+RQfyrVtrO1a0U7MuPvVnO6qQuMufuKByTW1a6PeLaNJdyC1VhwpGTWVK837wVGkihOL
        dfuxgY6VSRUZjhfzrRm0iJs4vtjepHWs6RZ7RipdJV/vCrnBR2QoS0sQz2cbtgICD61l3WjOh8yElWHT
        FbqvuXIqSFfM5f7orONapF76FyhfYwNP1ueymEF3yvQ5rr9F1e40aX7dpcpaAnM1uTkMPb0NYGpafFMC
        zKMnpisizvp9HuQjk7CcAnpXTCSbvR3MKig48slqfSuha5a69p6XVs2c8Mp6qfQ1qV4doevNot4mpWjE
        28nFzAOn+8K9psbyLULKK6gdWjkUMCDmvXo1udWe63PGr0JUnfoyxRRRW5zjJpVhheRiAFGea8V1zWP7
        U1C41KRvkjykGemPWu9+IOrGx0hbWNiJbptgx1A7/wCfevGPEEzOsdpCSuONo7mvPxlROSpHo4GnvNmR
        MZdSvssSFJ4PrXQWKtYyRlIxJhgDntRbwQ2ejQCRQZw4wO9Wbm4aO7jLxqqNg/L1rzXU5nyHprY255wV
        BJxWRdSozF17dadLc+b7D0rMuZ/3b44wOPrUylpyjhHlfMdz4A0NNRvH1WeMMkPyxq3r61qeIVAkkZjh
        hk5PQVd+Hu1PDdocrudSXGe9YPxMeS30xhCwDO4HB7GvTjCMcNY82U5SxNznJNQtSzKJ0LVk3ZMXmFT9
        7vWc9nDHCp2fMBknPJrSvYwLODgjegb6V58XpY9XqVtOuN85jNackot1KjvXO28ogvB1yelaskjZBPOa
        ip7uoWu7kc80u9NvOTgmm6nYxzw88uvWpJEBjBkJVQc8etXSzCCHzlUIzfM49KUHb3wmYmh3z2srWtwu
        5G4yewr1T4d6uLS/m0eWX90w8y3z+o/lXl3iODyb6O7tceQo52962dOvphFa6lCo8y0YMMdSO4rrpT5Z
        xqHFXhzU2j6Foqppt4moadBdJnbKgYZ9xRXsp31PEaseYeNr03XioxbsxWseSD6nn/CvOYle+10yAnZG
        24jGa67W7n7RrGszgAbZCmSegHH9K5vw8rpcT3Q/eHkED0rxK8rynJbnu4dfu426GjL9mv8AVPMU+UkQ
        zn1NVRI11eSSM25V4U1Kk0JinkMZVycYx+tJBCIrcbW3A85rnaVtNzoS1H4IXnvUFxaZj3Kc57VMZ16N
        SrKpXANYa7m2mxQhnv7ZSkV3NEFHChsCp7iK5vot1xdyPxnBbNWHiWX8sUmj6adR1uS2llYRIu7j2reM
        6k1yozlCnTfMykiHz47ZVMkjkKAP51o6tGySCEkHy02Ej+KteC1stMlklskYzHjfIc4+lYWrTeUhkcn6
        1pBcrsxc6lqjARGfUljXovWt+OMIfmGfSs7S4HDNcuM761mYKQD0NZVdWaRasNeNZTh/u4qK0H2i1nsp
        psFeVU08yADGarRvGmqIdpYvwcdqiDu7dBMlkWO80GS0QN5qdeP61S8MyLJHJazswABHFallcsbq6s4Y
        sqwJDVjaOfs2szRbgCW710U3dSRlK257Z8NL8XXh025Zi1vI0fzenUfzorJ+Gkpj1LVLbIK5VxjtnOf5
        UV7WGlzUos8HEK1WSON1dFa51jGSTcNkD61j+G1lWC6Nv8xJIK+ldFrUPl6zq8IOGLs2PbNc5oKOktws
        MqrK2eD3ryKn2/VnsYZ+58i07yjTZN8eMN9+ofPJhXAwMdKnMExsJ4p5VXac8GoraCP7OuTmuZv8zoiQ
        Btx5pQj9s1c2xqOBzUgJYcp25rJS0sbJLdlHy58HDGruiahDpWrySXj7UaMrmkZ1QcdMY5qusMU4LSKG
        JNXTcoO7InFS0Ntr6zun/wBHn3Z7VRvwoHzxh19KoX1otusVxDwysMgVo3Y3RLI3V1zXRGXM7mSjbQyr
        S7XzDb4wvarEhOSD+FZM7bbuPHHNbgIOCfSsqm5qkUmzUSbvt8G1gDnv39qvtCrNmoUt0k1OKPdjAyp9
        6zp7/eDLlvJcNq0oWEIQvSsK0RIfEko++WcZrdgjujeXEhlQKB87Z7Vj6TGsuszODkbs5rop9fQylsz0
        r4dEp4p1BBja0YJ/D/8AXRU/w0iD6pqdwOh2qD+dFexhP4EfQ8PFfxWUvHNm1n4qW42DZeR7cjuR/kV5
        5Egs9ePmuYsnapHevZfiPpTXmkJexk77U7gAOSMjNeRauiSxQ3yKT659a4cVT5ZtLZnoYKd4WZde2ht9
        Qdbi4LpIM1XibDGILjBOPpTkktLywW4Abzo+x9KmYG6Rb5V2JGMFa4XZu0dzuWgqgHjHNQXbNH5QD7dz
        YJqZriNY96dGrN1CVpoRgfcOamKjGRT947Oz8H2V44V7yTJAJAFZPi7Ql8MarpyQyM0VwCefaul8J3qX
        trE4YbxhSO9dR4o0Gz8QaREbnIki+447V6kqSqU9DzHWnTrWlseRahJiFwOrEACr10jG3jVh8wjAxV1v
        D1hpb+ZLM9yUOQp6A9qr30jSt5p4LngjtXHGHLod6mm7o4/UMx3cWfWttJUKopOMjNYuoH7RqCQx/MEO
        SRWjtB2k/wAPArKo4rVm0S+V+TI/OorUxEySykjAwrVXSSSaRbRD8z96uyNHti02ROFPLDuaiK5FzP5E
        yfYa8a2GlTXDXBKv2NVdAhEVnLdScDBP+FR6z5Ms0Wn2u4j+PJzxWotphbXTY/8AWTkDj0ropxelupjU
        aUG2emfDOy8nRJLhlw8r5z7UV0+iWi2Oj21uoxsjAor3KUFCCiuh4FSTlJtli+tku7OWFwCrqQc14hqO
        mvpWoz6bcJutpiWhY9q936iuJ8a+Ho9UtiACsq/NEy9QfSscVT54XW5thqnJOx49DPJpF4YHjEsZPzAj
        nFaUguWlWQR7LE8t9KS5tvtStbXOE1CHgMf4hVG2upLdntL+V1iPGWrx6kLfDue1B8yJ7qMCR5rP95bg
        cj0pkCBlEgGQexqxuNnEsenDz4pPvcdKWSS2TykiP7xuGHpWM1pfsVHRkdjqNz4d1H7XAhlgY/PH7e1e
        rad4v0bXNK/dXSRuo+eNzgqa8tCK+Qfunr7Vl32nQTNhd0fr5Zxn610YbF8sbMzr4X2q5kd3rNxbJKzC
        4hI6nDg1x+q65G4MOngzTHgv2FZA0a2BHzyE/wC8a17O1ghQBF2yfzpVKqbuiqdLlikQ6bpxgVpJPmlf
        rntT5UbzkgiG6RjVyWQIjMTtIHNLJIEjjnsE82T+I+lc3xPU2vpYYsa29myJhr7d8vqKSa6l03T3kuLc
        NcN0J5omksbUi7mmIuW6J71Xs4JtRuWubqRjFn5ENbODkk3sjKWiHaRbKfMv7rCsRkg9vau28E6PJqOo
        tqcyfL0iB9KwdPsn1q+S1t48WcZ/ev8A3q9k0OwSysI1VAAB8uOwr0cLT53z9DzcVWdrI01UKoUdAKKW
        ivSPNCqt/A09uVQDf2J7VaqC7nFtbPIegH5UCavoeV+NrKztLcXZIW7VsIR/EfSuQZrbU1EFyoS4A5Nb
        PiO//tTUZtQmH+hWhIiX++/rXnEl9cfbJLoNyzZIrx69ZVqr7L8z6vBZbUlRu/i/LyOkM+o6KxSFA0fr
        jjFR291BcXBuJhskPaobLxLlRHMgdem09q0Hg07UMNG4Rz2Fc3K7a7mM4zpu1ToThlY5jYEH0qGWFnzg
        4qCTRb2Bg1tLlD6HNN8rUoQxZS23rkVl7LUca9N6NEq2zL71OqletVVfUJAP3Dc98UCC/kXcCyjOOlHs
        79i5VqUFoizO8SIQ7Bs9TVOHU5rZGgsUyWP3sdKtLo+1N9xKNw688Uk1/YWCKIwHcd61hTS+K9jL2rm/
        dTCLTBNIt1fYXHOTT575JZUSAbbbdtdh296wNR16e7kZQfl7Yp3hy68q7eC7O6C4+U57HtTneKU5dOnk
        dtLL6lSLnP8A4Y9y8OaNDFaxC0xtABY+ua7RFCoABgAdK878Cai9rO2lXLZkU/IT/EvavRq92nVjViqk
        dmj5bFUpUqzUv+HXR/MKKKKswCuS8cay1nZxafbsPtF2dmO4Xua6a9uks7OW5cgLGpY59hXi3iHxA0wu
        NbmTE0o8m2j9F9a48ZX9nBqPxPY9HLMK61ZO10v6/wCCYPiq7jRotNtnBiiGJGH8R9a5r7Pk89KRpWkk
        Z5ASWqQTBQOuB615NKFklc/ScPRdCn7L8e5SuLZ4jlRxUcdzLEcoxFbSzRzLtdahnskI+UVvKau2zCrQ
        V3zIhg129hz87FSMEA1qWGu3t5cx26KWZuufT1rENpjOWx610ui6XJaabvCn7be/JbjHIXuampJRaXV7
        Hm4vBUYLmkiaLU7x2uIopFZrc9R3rHl8SXTM+0nAPIruL/w2mlaZZ3dtEWmh4uB/ez1Jritd0pbK9E8I
        P2WZd6kfyoqRdGfJPc4cDTwuJd4Lrb5mXcapdz5+dgDVUytJ8pyTVyK3D8jp2q7DaRoPMlA69BT5k9j3
        4YSnDZfgUILRyN2KnEZVwx4x0+tWmugrGEJg9vpVNpSXIKkgHipk1fmbOykuXS2/Q9B0a/a50yK9jIF9
        ZfeweWSvZtKvIr/TYLmFso6AivmfR9VfTNRjl2lon+WQeor2DwTrP2O7/sx3BtZx5lsc9M9RWuAq+yk6
        cnpJ6HxmfZfKD54ru/8AgfI9EopMnPtRXsnyhV1PT4tUsJLOcsI5BhtpwcVzs3w/0i52+erMEGEGegrr
        aKiVOEmnJXNaVerS/hya9Dz6bwFokD7Psm45ph8E6QAMWK7F5Oetd9JbpI25uvSo2sYyDyQT3pOnD+VG
        ksbipJR9rLz95ng3jbQF0q+Se2iK2zjAA7VyouWxg19AeK/Dy6jpUkAy3GVOOQa+fru1nttQe3lUhkbB
        HvXmYqjyO6Wh9xkWYxxeGdKrK84b+nc0tC05tT1MBgPIjG+UnoFFeieG7I6pftqXljyY/wB3arjoB1NY
        OmaVLFaW+kw8XV4Q8x7pH6V6xomlRWgj8kbY4htwO5xSwFJzn7WWy2/U8jiDMPae5B2vp6Jdf+3vyKtz
        Zs0Lo8edwwcjg15zfaSWa50K4A6GW1c+vpXtU0KTJsYcdeK4Txdo0k0RngBW5tj5kJ/vDPSu3F4dVaLS
        +Jao8TK8Q8PWd3ZP8PO3fp6HiODA5iK8qcGleXzCFAJ7YroPEdot0iaxbJt80YlQD7j1F4K0Rtb1xAVP
        lRHc57ZryaMpVUlbXqfo6x1FYf61PRJbefY7Twx4OtZNKimvrYPcPyPpXRRfD/SbgbjZL1wSTXV2NkIo
        xuVduMAY6VeVAi4UYFe3ToQjGzirn5tUzHFzrTq+0av2bSscevw08Ph8tbkj+7mrMXgXTIZIDH5irbvv
        iAb7p+tdRj3pap0qemi0M5YzESVpVG/VtiAEYGaKWitDmCiiigAxzRRRQBDcRF4mCY3HnmvJfFehRWmu
        f2xIgCg8pj7z17BVO90+0vk23UCSgHIDDNY16Ma0HCR0YXEzw1Tnh6PzXVHE+FtMl8p725X/AEy6YEE/
        wr2Fd3bQGCPaWznk09YYxsIQDaMLx0qSrhTjCKitkRWrSqycpdfy6L5B3qpqFss8DEKC68g+3cVboqzI
        8f8AFWhzaLfSbk/4lt+2045CSGuz8FeFIdB0nEiZuJTucn9BXR3+nW2pQCG6iEiKwYA9iO9WQAAAO1c8
        MNCFR1I7s7q2Pq1cOsPL4evn6igYGKKKK6DhCiiigAooooA//9k=
</value>
  </data>
</root>